package javamainl;
import java.util.Scanner;
import java.util.Arrays;

//객체지향의 목적은 같은 유형의 로직끼리 서로 분류하려고.
//이를 위해서 class를 생성한다. class는 로직들을 대표하는 것 class이하 로직들을 그룹핑하기위한것.
//클래스는 연관되어 있는 변수와 메소드의 집합이다.!
class calculator{  //calculator란 class생성 이때 자바는 접근제어자(public)를 메인함수로 보기떄문
	//에 public을 사용하면 오류가 발생함.
	int left,right;  //전역 변수 생성 
	
	public void setOprands(int left, int right) { //setOprands란 메소드 생성
		this.left = left; //this.은 인스턴트 자신을 가리키는 키워드인데. 쓰는 이유는 left란 변수가
		//겹치기 때문에 이를 구별하려고, 따라서 변수 이름이 다르다면 안써도 된다.
		this.right = right;		
	}
	public void sum() {
		System.out.println(this.left+this.right);
		
	}
	public void avg() {
		System.out.println((this.left+this.right)/2);
	}	
	
}
public class javapractice {

	public static void main(String[] args) {
		calculator c1 = new calculator(); 
		//calculator란 클래스를 실제 사용하는(제품)으로 불러오기 위해new사용
		c1.setOprands(1,2);
		c1.sum();
		c1.avg();
		
		calculator c2 = new calculator();
		c2.sum();
		c2.avg();
		
	
	}			
}
		
